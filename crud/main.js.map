{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/capiatalise-directive.ts","webpack:///./src/app/edit-note/edit-note.component.css","webpack:///./src/app/edit-note/edit-note.component.html","webpack:///./src/app/edit-note/edit-note.component.ts","webpack:///./src/app/login-board/login-board.component.css","webpack:///./src/app/login-board/login-board.component.html","webpack:///./src/app/login-board/login-board.component.ts","webpack:///./src/app/loginguard.service.ts","webpack:///./src/app/notes/notes.component.css","webpack:///./src/app/notes/notes.component.html","webpack:///./src/app/notes/notes.component.ts","webpack:///./src/app/single-note/single-note.component.css","webpack:///./src/app/single-note/single-note.component.html","webpack:///./src/app/single-note/single-note.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginBoardComponent } from \"./login-board/login-board.component\";\nimport { NotesComponent } from \"./notes/notes.component\";\nimport { LoginguardService } from \"./loginguard.service\";\nimport { SingleNoteComponent } from \"./single-note/single-note.component\";\nimport { EditNoteComponent } from \"./edit-note/edit-note.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: LoginBoardComponent },\n  {\n    path: \"notes\",\n    canActivate: [LoginguardService],\n    component: NotesComponent\n  },\n  {\n    path: \"addnote\",\n    canActivate: [LoginguardService],\n    component: SingleNoteComponent\n  },\n  {\n    path: \"editnote\",\n    canActivate: [LoginguardService],\n    component: EditNoteComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crud';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LoginBoardComponent } from \"./login-board/login-board.component\";\nimport { NotesComponent } from \"./notes/notes.component\";\nimport { SingleNoteComponent } from \"./single-note/single-note.component\";\nimport { EditNoteComponent } from \"./edit-note/edit-note.component\";\nimport { MyCapitaliseDirective } from \"./capiatalise-directive\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginBoardComponent,\n    NotesComponent,\n    SingleNoteComponent,\n    EditNoteComponent,\n    MyCapitaliseDirective\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Directive, ElementRef } from \"@angular/core\";\r\n@Directive({\r\n  selector: \"[my-capitaliseDirective]\"\r\n})\r\nexport class MyCapitaliseDirective {\r\n  constructor(elr: ElementRef) {\r\n    let el = elr.nativeElement;\r\n    el.oninput;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtbm90ZS9lZGl0LW5vdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group\\\">\\n    <span> topic </span>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"topic\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <span> content </span>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"content\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <button (click)=\\\"pushNote()\\\" class=\\\"btn btn-primary\\\">done</button>\\n  <button (click)=\\\"cancelNote()\\\" class=\\\"btn btn-primary\\\">cancel</button>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { LoginguardService } from \"../loginguard.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-edit-note\",\n  templateUrl: \"./edit-note.component.html\",\n  styleUrls: [\"./edit-note.component.css\"]\n})\nexport class EditNoteComponent implements OnInit {\n  topic;\n  content;\n\n  constructor(private state: LoginguardService, private router: Router) {}\n  pushNote() {\n    let topic = this.topic;\n    let content = this.content;\n    let index = this.state.EditedNote.index;\n    this.state.noteArray[index] = { topic, content };\n    this.router.navigateByUrl(\"notes\");\n  }\n\n  cancelNote() {\n    this.router.navigateByUrl(\"notes\");\n  }\n\n  ngOnInit() {\n    this.topic = this.state.EditedNote.topic;\n    this.content = this.state.EditedNote.content;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLWJvYXJkL2xvZ2luLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group\\\">\\n    <span> User Name </span>\\n    <input\\n      my-capitaliseDirective\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"userName\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <span> Password </span>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <button\\n    (click)=\\\"signin()\\\"\\n    class=\\\"btn btn-primary\\\"\\n    [disabled]=\\\"!userName || !password\\\"\\n  >\\n    Sign In\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { LoginguardService } from \"../loginguard.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login-board\",\n  templateUrl: \"./login-board.component.html\",\n  styleUrls: [\"./login-board.component.css\"]\n})\nexport class LoginBoardComponent implements OnInit {\n  constructor(private guard: LoginguardService, private Router: Router) {}\n\n  userName;\n  password;\n\n  signin() {\n    if (this.userName == \"harit\" && this.password == \"harit\") {\n      this.guard.permit = true;\n      this.Router.navigateByUrl(\"notes\");\n    }\n  }\n  ngOnInit() {\n    this.userName = \"harit\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LoginguardService implements CanActivate {\n  permit: boolean = false;\n\n  EditedNote: any;\n\n  noteArray = [\n    { topic: \"topic 1\", content: \"content 1\" },\n    { topic: \"topic 2\", content: \"content 2\" },\n    { topic: \"topic 3\", content: \"content 3\" }\n  ];\n\n  canActivate() {\n    return this.permit;\n  }\n  constructor() {}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGVzL25vdGVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"table\\\">\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Topic</th>\\n          <th>Content</th>\\n          <th>Action</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let el of noteArray; let i = index\\\">\\n          <td>{{ el.topic }}</td>\\n          <td>{{ el.content }}</td>\\n          <td>\\n            <button (click)=\\\"deleteNote(i)\\\" class=\\\"btn btn-danger\\\">\\n              delete\\n            </button>\\n          </td>\\n          <td>\\n            <button (click)=\\\"editNote(i)\\\" class=\\\"btn btn-info\\\">\\n              edit\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <!-- <div class=\\\"row\\\" *ngFor=\\\"let el of noteArray\\\">\\n    <div class=\\\"col-3\\\">\\n      <strong>{{ el.topic }}</strong>\\n      <span>{{ el.content }}</span>\\n      <button (click)=\\\"deleteNote(el.topic)\\\" class=\\\"btn btn-danger\\\">\\n        delete\\n      </button>\\n    </div>\\n  </div> -->\\n  <button (click)=\\\"addNote()\\\" class=\\\"btn btn-primary\\\">\\n    addnote\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { LoginguardService } from \"../loginguard.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-notes\",\n  templateUrl: \"./notes.component.html\",\n  styleUrls: [\"./notes.component.css\"]\n})\nexport class NotesComponent implements OnInit {\n  constructor(private state: LoginguardService, private router: Router) {}\n  noteArray;\n\n  addNote() {\n    this.router.navigateByUrl(\"addnote\");\n  }\n  deleteNote(Index) {\n    this.state.noteArray.splice(Index, 1);\n    // this.state.noteArray.map((note, i, arr) => {\n    //   if (note.topic == topic) {\n    //     arr.splice(i, 1);\n    //     console.log(arr);\n    //   }\n\n    this.noteArray = this.state.noteArray;\n  }\n\n  editNote(i) {\n    this.state.EditedNote = this.state.noteArray[i];\n    this.state.EditedNote.index = i;\n    console.log(this.state.EditedNote);\n    this.router.navigateByUrl(\"editnote\");\n  }\n\n  ngOnInit() {\n    this.noteArray = this.state.noteArray;\n  }\n}\n\n// class NoteObject {\n//   topic = \"\";\n//   content = \"\";\n// }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpbmdsZS1ub3RlL3NpbmdsZS1ub3RlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group\\\">\\n    <span> topic </span>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"topic\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <span> content </span>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"content\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <button (click)=\\\"pushNote()\\\" class=\\\"btn btn-primary\\\">done</button>\\n  <button (click)=\\\"cancelNote()\\\" class=\\\"btn btn-primary\\\">cancel</button>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { LoginguardService } from \"../loginguard.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-single-note\",\n  templateUrl: \"./single-note.component.html\",\n  styleUrls: [\"./single-note.component.css\"]\n})\nexport class SingleNoteComponent implements OnInit {\n  topic;\n  content;\n\n  constructor(private state: LoginguardService, private router: Router) {}\n\n  pushNote() {\n    let topic = this.topic;\n    let content = this.content;\n    this.state.noteArray.push({ topic, content });\n    this.router.navigateByUrl(\"notes\");\n  }\n  cancelNote() {\n    this.router.navigateByUrl(\"notes\");\n  }\n\n  ngOnInit() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}